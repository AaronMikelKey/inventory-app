extends layout

block content
  div.container
    section(class='hero is-dark is-primary') 
      div.hero-body
        div.container
          h1.title.has-text-black #{title}
    div.field
      form(method='POST' action='')
        label.label(for='name') Name:
        div.control
          input.input#name(type='text' placeholder='Storage Name' name='name' required='true' value=(undefined===newStorage ? '' : newStorage.name))
        label.label(for='manufacturer') Manufacturer:
        div.control
          input.input#manufacturer(type='text' placeholder='Manufacturer' name='manufacturer' required='true' value=(undefined===newStorage ? '' : newStorage.manufacturer))
        label.label(for='type') Type:
        div.control
          div.select
            select#type(type='select' placeholder='Select Type' name='type' required='true')
              - types.sort(function(a, b) {let textA = a.toUpperCase(); let textB = b.toUpperCase(); return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;});
              for item in types
                if newStorage
                  option(value=item selected=(newStorage.type==item) ? 'selected' : false) #{item}
                else
                  option(value=item) #{item}
        label.label(for='capacity') Capacity:
        div.control
          div.select
            select#capacity(type='select' placeholder='Capacity' name='capacity' required='true')
              - capacitys.sort(function(a, b) {let textA = parseInt(a.replace('GB', '')); let textB = parseInt(b.replace('GB', '')); return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;});
              for item in capacitys
                if newStorage
                  option(value=item selected=(newStorage.capacity==item) ? 'selected' : false) #{item}
                else
                  option(value=item) #{item}
        label.label(for='price') Price:
        div.control
          input.input(type='number', name='price' placeholder='0.00' step='0.01' required='true' value=(undefined===newStorage ? '' : newStorage.price))
        label.label(for='amount') Amount:
        div.control
          input.input(type='number', name='amount' placeholder='1' required='true' value=(undefined===newStorage ? '' : newStorage.amount))
        button.button.is-link(type='submit') Submit
    
    if errors
      ul
        for error in errors
          li!=error.msg